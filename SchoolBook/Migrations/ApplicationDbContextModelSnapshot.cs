// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolBook.Data;

namespace SchoolBook.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "f67df2ce-0448-42a9-be11-3c68ea78d9c1",
                            ConcurrencyStamp = "40ef233c-5b48-4e4f-b4a2-96fc983f992d",
                            Name = "Administrador",
                            NormalizedName = "ADMINISTRADOR"
                        },
                        new
                        {
                            Id = "295b11cf-22e3-48b3-b6ab-538653c98c04",
                            ConcurrencyStamp = "f4acea0a-b9df-4a63-a600-2433a5164de0",
                            Name = "Profesor",
                            NormalizedName = "PROFESOR"
                        },
                        new
                        {
                            Id = "8176f8e0-49bf-44bd-9655-d39b9cf7111d",
                            ConcurrencyStamp = "52bec1b1-b1b1-4687-925d-fade60b9cf29",
                            Name = "Apoderado",
                            NormalizedName = "APODERADO"
                        },
                        new
                        {
                            Id = "05ea2c83-210a-446d-971b-ecdf4f489461",
                            ConcurrencyStamp = "f4d861d3-6c44-4c18-9e22-6bda9f49b650",
                            Name = "Supervisor",
                            NormalizedName = "SUPERVISOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SchoolBook.Models.Bulletin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subtitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bulletins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Esto es demasiado interesante..",
                            Image = "https://images.app.goo.gl/ogig7XCRdeA8CDw7A",
                            Subtitle = "Que tema tan interesante nos hablan hoy",
                            Title = "Noticia de prueba 1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Esto es demasiado interesante..",
                            Image = "https://images.app.goo.gl/x2sKNN55vLYSwMa79",
                            Subtitle = "Que tema tan interesante nos hablan hoy",
                            Title = "Noticia de prueba 2"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Esto es demasiado interesante..",
                            Image = "https://images.app.goo.gl/mNmcKwGGu39gd2pX8",
                            Subtitle = "Que tema tan interesante nos hablan hoy",
                            Title = "Noticia de prueba 3"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Esto es demasiado interesante..",
                            Image = "https://images.app.goo.gl/qNZZs7FBSuiRezkT6",
                            Subtitle = "Que tema tan interesante nos hablan hoy",
                            Title = "Noticia de prueba 4"
                        });
                });

            modelBuilder.Entity("SchoolBook.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "7A",
                            Description = "Septimo Básico A",
                            GradeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "7B",
                            Description = "Septimo Básico B",
                            GradeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "8A",
                            Description = "Octavo Básico A",
                            GradeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "8A",
                            Description = "Octavo Básico B",
                            GradeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "1A",
                            Description = "Primero Medio A",
                            GradeId = 3
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "1B",
                            Description = "Primero Medio B",
                            GradeId = 3
                        },
                        new
                        {
                            Id = 7,
                            Abbreviation = "2A",
                            Description = "Segundo Medio A",
                            GradeId = 4
                        },
                        new
                        {
                            Id = 8,
                            Abbreviation = "2B",
                            Description = "Segundo Medio B",
                            GradeId = 4
                        },
                        new
                        {
                            Id = 9,
                            Abbreviation = "3A",
                            Description = "Tercero Medio A",
                            GradeId = 5
                        },
                        new
                        {
                            Id = 10,
                            Abbreviation = "3B",
                            Description = "Tercero Medio B",
                            GradeId = 5
                        },
                        new
                        {
                            Id = 11,
                            Abbreviation = "4A",
                            Description = "Cuarto Medio A",
                            GradeId = 6
                        },
                        new
                        {
                            Id = 12,
                            Abbreviation = "4B",
                            Description = "Cuarto Medio B",
                            GradeId = 6
                        });
                });

            modelBuilder.Entity("SchoolBook.Models.ClassSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ClassSubjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 1,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 1,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 1,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 1,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 1,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 2,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 2,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 2,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 2,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 2,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 2,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 3,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 3,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 3,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 3,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 3,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 3,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 4,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 4,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 4,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 4,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 4,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 4,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 5,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 5,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 5,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 5,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 29,
                            ClassId = 5,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 30,
                            ClassId = 5,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 31,
                            ClassId = 6,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 32,
                            ClassId = 6,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 33,
                            ClassId = 6,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 34,
                            ClassId = 6,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 35,
                            ClassId = 6,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 36,
                            ClassId = 6,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 37,
                            ClassId = 7,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 38,
                            ClassId = 7,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 39,
                            ClassId = 7,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 40,
                            ClassId = 7,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 41,
                            ClassId = 7,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 42,
                            ClassId = 7,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 43,
                            ClassId = 8,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 44,
                            ClassId = 8,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 45,
                            ClassId = 8,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 46,
                            ClassId = 8,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 47,
                            ClassId = 8,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 48,
                            ClassId = 8,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 49,
                            ClassId = 9,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 50,
                            ClassId = 9,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 51,
                            ClassId = 9,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 52,
                            ClassId = 9,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 53,
                            ClassId = 9,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 54,
                            ClassId = 9,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 55,
                            ClassId = 10,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 56,
                            ClassId = 10,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 57,
                            ClassId = 10,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 58,
                            ClassId = 10,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 59,
                            ClassId = 10,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 60,
                            ClassId = 10,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 61,
                            ClassId = 11,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 62,
                            ClassId = 11,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 63,
                            ClassId = 11,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 64,
                            ClassId = 11,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 65,
                            ClassId = 11,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 66,
                            ClassId = 11,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 67,
                            ClassId = 12,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 68,
                            ClassId = 12,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 69,
                            ClassId = 12,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 70,
                            ClassId = 12,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 71,
                            ClassId = 12,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 72,
                            ClassId = 12,
                            SubjectId = 6
                        });
                });

            modelBuilder.Entity("SchoolBook.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Enseñansa Básica"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Enseñansa Media"
                        });
                });

            modelBuilder.Entity("SchoolBook.Models.EducationGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EducationId")
                        .HasColumnType("int");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("GradeId");

                    b.ToTable("EducationGrades");
                });

            modelBuilder.Entity("SchoolBook.Models.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassSubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<int>("GradeSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("PeriodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassSubjectId");

                    b.HasIndex("PeriodId");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("SchoolBook.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YearId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Septimo Básico",
                            YearId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Octavo Básico",
                            YearId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Primero Medio",
                            YearId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Segundo Medio",
                            YearId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Tercero Medio",
                            YearId = 1
                        },
                        new
                        {
                            Id = 6,
                            Description = "Cuarto Medio",
                            YearId = 1
                        });
                });

            modelBuilder.Entity("SchoolBook.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Msg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("SchoolBook.Models.MenuOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupMenuOptionId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MenuOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Libro de Clases",
                            GroupMenuOptionId = 0,
                            Icon = "small-icon svgcollege-029-papyrus",
                            Order = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Notas",
                            GroupMenuOptionId = 1,
                            Order = 0,
                            Url = "ClassBook"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Anotaciones",
                            GroupMenuOptionId = 1,
                            Order = 0,
                            Url = "Observations"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Evaluaciones",
                            GroupMenuOptionId = 1,
                            Order = 0,
                            Url = "Evaluations"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Asistencia",
                            GroupMenuOptionId = 1,
                            Order = 0,
                            Url = "Attendance"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Atrasos",
                            GroupMenuOptionId = 1,
                            Order = 0,
                            Url = "Delays"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Alumnos",
                            GroupMenuOptionId = 0,
                            Icon = "small-icon svgcollege-019-reading-book",
                            Order = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "Ficha Alumno",
                            GroupMenuOptionId = 7,
                            Order = 0,
                            Url = "Student"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Accidente Escolar",
                            GroupMenuOptionId = 7,
                            Order = 0,
                            Url = "Accidents"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Administración",
                            GroupMenuOptionId = 0,
                            Icon = "small-icon svgcollege-043-test",
                            Order = 4
                        },
                        new
                        {
                            Id = 11,
                            Description = "Credenciales",
                            GroupMenuOptionId = 10,
                            Order = 0,
                            Url = "Credentials"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Cambiar Contraseña",
                            GroupMenuOptionId = 10,
                            Order = 0,
                            Url = "Password"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Horarios",
                            GroupMenuOptionId = 0,
                            Icon = "small-icon svgcollege-005-alarm",
                            Order = 5
                        },
                        new
                        {
                            Id = 14,
                            Description = "Crear Horarios",
                            GroupMenuOptionId = 13,
                            Order = 0,
                            Url = "ScheduleMaker"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Horario Por Asignatura",
                            GroupMenuOptionId = 13,
                            Order = 0,
                            Url = "ScheduleMaker?type=1"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Horario Por Curso",
                            GroupMenuOptionId = 13,
                            Order = 0,
                            Url = "ScheduleMaker?type=2"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Horario Por Profesor",
                            GroupMenuOptionId = 13,
                            Order = 0,
                            Url = "ScheduleMaker?type=3"
                        });
                });

            modelBuilder.Entity("SchoolBook.Models.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypePeriodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypePeriodId");

                    b.ToTable("Periods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Primer Semestre",
                            End = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order = 1,
                            Start = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypePeriodId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Segundo Semestre",
                            End = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order = 2,
                            Start = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypePeriodId = 1
                        });
                });

            modelBuilder.Entity("SchoolBook.Models.RoleMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MenuOptionId")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MenuOptionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleMenus");
                });

            modelBuilder.Entity("SchoolBook.Models.SchoolYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("SchoolYears");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            End = new DateTime(2021, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2020
                        });
                });

            modelBuilder.Entity("SchoolBook.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Juanito Perez"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Luchito Jara"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kenita Larrain"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Luly Love"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Felipito Camiroa"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Don Francisquito"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Julito Videla"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Arturito Vidal"
                        });
                });

            modelBuilder.Entity("SchoolBook.Models.StudentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentsClasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 2,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 3,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 4,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 5,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 6,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 2,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 3,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 4,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 11,
                            ClassId = 5,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 12,
                            ClassId = 6,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 13,
                            ClassId = 1,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 14,
                            ClassId = 2,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 15,
                            ClassId = 3,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 16,
                            ClassId = 4,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 17,
                            ClassId = 5,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 18,
                            ClassId = 6,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 19,
                            ClassId = 1,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 20,
                            ClassId = 2,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 21,
                            ClassId = 3,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 22,
                            ClassId = 4,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 23,
                            ClassId = 5,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 24,
                            ClassId = 6,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 25,
                            ClassId = 1,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 26,
                            ClassId = 2,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 27,
                            ClassId = 3,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 28,
                            ClassId = 4,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 29,
                            ClassId = 5,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 30,
                            ClassId = 6,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 31,
                            ClassId = 1,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 32,
                            ClassId = 2,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 33,
                            ClassId = 3,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 34,
                            ClassId = 4,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 35,
                            ClassId = 5,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 36,
                            ClassId = 6,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 37,
                            ClassId = 1,
                            StudentId = 7
                        },
                        new
                        {
                            Id = 38,
                            ClassId = 2,
                            StudentId = 7
                        },
                        new
                        {
                            Id = 39,
                            ClassId = 3,
                            StudentId = 7
                        },
                        new
                        {
                            Id = 40,
                            ClassId = 4,
                            StudentId = 7
                        },
                        new
                        {
                            Id = 41,
                            ClassId = 5,
                            StudentId = 7
                        },
                        new
                        {
                            Id = 42,
                            ClassId = 6,
                            StudentId = 7
                        },
                        new
                        {
                            Id = 43,
                            ClassId = 1,
                            StudentId = 8
                        },
                        new
                        {
                            Id = 44,
                            ClassId = 2,
                            StudentId = 8
                        },
                        new
                        {
                            Id = 45,
                            ClassId = 3,
                            StudentId = 8
                        },
                        new
                        {
                            Id = 46,
                            ClassId = 4,
                            StudentId = 8
                        },
                        new
                        {
                            Id = 47,
                            ClassId = 5,
                            StudentId = 8
                        },
                        new
                        {
                            Id = 48,
                            ClassId = 6,
                            StudentId = 8
                        });
                });

            modelBuilder.Entity("SchoolBook.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Historia y Geografía"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Matemáticas"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lenguaje y Comunicaciones"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Biología"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Química"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Física"
                        });
                });

            modelBuilder.Entity("SchoolBook.Models.TypePeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypePeriods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Semestral"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Trimestral"
                        });
                });

            modelBuilder.Entity("SchoolBook.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("IdSuperior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SchoolBook.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SchoolBook.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolBook.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SchoolBook.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolBook.Models.Class", b =>
                {
                    b.HasOne("SchoolBook.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolBook.Models.ClassSubject", b =>
                {
                    b.HasOne("SchoolBook.Models.Class", "Class")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolBook.Models.Subject", "Subject")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolBook.Models.EducationGrade", b =>
                {
                    b.HasOne("SchoolBook.Models.Education", "Education")
                        .WithMany("EducationGrades")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolBook.Models.Grade", "Grade")
                        .WithMany("EducationGrades")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolBook.Models.Evaluation", b =>
                {
                    b.HasOne("SchoolBook.Models.ClassSubject", "ClassSubject")
                        .WithMany("Evaluations")
                        .HasForeignKey("ClassSubjectId");

                    b.HasOne("SchoolBook.Models.TypePeriod", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolBook.Models.Grade", b =>
                {
                    b.HasOne("SchoolBook.Models.SchoolYear", "Year")
                        .WithMany()
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolBook.Models.Period", b =>
                {
                    b.HasOne("SchoolBook.Models.TypePeriod", "TypePeriod")
                        .WithMany()
                        .HasForeignKey("TypePeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolBook.Models.RoleMenu", b =>
                {
                    b.HasOne("SchoolBook.Models.MenuOption", "MenuOption")
                        .WithMany()
                        .HasForeignKey("MenuOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("SchoolBook.Models.StudentClass", b =>
                {
                    b.HasOne("SchoolBook.Models.Class", "Class")
                        .WithMany("StudentClass")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolBook.Models.Student", "Student")
                        .WithMany("StudentClass")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
